<?php

namespace App\Tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

/**
 * Class RegisterControllerTest
 * @package App\Tests\Controller
 */
class RegisterControllerTest extends WebTestCase
{
    /**
     * @var \Symfony\Bundle\FrameworkBundle\KernelBrowser
     */
    private $client;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = static::createClient();
    }

    public function testRegisterFail()
    {
        $bodyError = [
            [],
            ["email" => "yourmail"],
            ["email" => "y@y.c"],
            ["email" => "me@me.com"],
            ["password" => "12345"],
            ["email" => "y@y.camsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamamcamsmmsmsmsmmamamamamamamam"]
        ];

        $msgErrors = [
            [
                "email"    => "Email is required!",
                "password" => "A password is required!"
            ],
            ["email" => "This value is not a valid email address."],
            ["email" => "Type must be at least 6 characters long"],
            ["password" => "A password is required!"],
            ["password" => "This value should have exactly 6 characters."],
            ["email" => "Type cannot be longer than 180 characters"]
        ];

        foreach ($bodyError as $key => $body)
        {
            $msg = [
                "status" => "fail",
                "data"   => $msgErrors[$key]
            ];

            $this->client->request('POST', '/register', $body);
            $this->assertEquals(422, $this->client->getResponse()->getStatusCode());

            $jsonError = json_encode($msg);
            $this->assertJson($jsonError, $this->client->getResponse()->getContent());
        }
    }

    public function testRegisterSuccess()
    {
        $user   = [
            "email"    => "yourmail@mail.com",
            "password" => 123456
        ];

        $now = new \DateTime('now');

        $this->client->request('POST', '/register', $user);
        $this->assertEquals(201, $this->client->getResponse()->getStatusCode());

        $res  = json_decode($this->client->getResponse()->getContent(), true);

        $this->assertArrayHasKey("status", $res);
        $this->assertArrayHasKey("data", $res);
        $this->assertCount(2, $res);
        $this->assertEquals($res["status"], "success");

        $this->assertCount(6, $res["data"]);
        $this->assertArrayHasKey("id", $res["data"]);
        $this->assertArrayHasKey("email", $res["data"]);
        $this->assertArrayHasKey("created_at", $res["data"]);
        $this->assertArrayHasKey("updated_at", $res["data"]);
        $this->assertArrayHasKey("status", $res["data"]);
        $this->assertArrayHasKey("status_description", $res["data"]);
        $this->assertEquals($res["data"]["created_at"], $now->format('Y-m-d H:i:s'));

    }
}